{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","memo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","preparedTodos","createTodo","App","useState","setTitle","setTodos","selectedUserId","setSelectedUserId","userErrorStatus","setUserErrorStatus","titleErrorStatus","setTitleErrorStatus","Paper","elevation","onSubmit","event","preventDefault","trim","nextTodoId","Math","max","prevTodos","type","placeholder","value","onChange","target","FormControl","fullWidth","String","Number","disabled","Button","variant","style","minWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2241c656.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Yorinobu Arasaka',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Saburo Arasaka',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { memo } from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = memo(({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n));\n","import React, { memo } from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = memo(({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n));\n","import { FC, memo } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = memo(({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n));\n","// import React from 'react';\nimport React, { FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport {\n  Button,\n  FormControl,\n  Paper,\n} from '@mui/material';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nconst getUserById = (userId: number) => (\n  usersFromServer.find(user => user.id === userId) || null\n);\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst createTodo = (id: number, title: string, userId: number) => ({\n  id,\n  title,\n  userId,\n  completed: false,\n  user: getUserById(userId),\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(preparedTodos);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [userErrorStatus, setUserErrorStatus] = useState(false);\n  const [titleErrorStatus, setTitleErrorStatus] = useState(false);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (title.trim() === '' || selectedUserId === 0) {\n      setTitleErrorStatus(title.trim() === '');\n      setUserErrorStatus(selectedUserId === 0);\n\n      return;\n    }\n\n    const nextTodoId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    setTodos(prevTodos => ([\n      ...prevTodos,\n      createTodo(nextTodoId, title, selectedUserId),\n    ]));\n\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    if (titleErrorStatus === true) {\n      setTitleErrorStatus(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(Number(event.target.value));\n    if (userErrorStatus === true) {\n      setUserErrorStatus(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Paper className=\"App__content\" elevation={8}>\n        <h1>Add todo form</h1>\n\n        <form className=\"App__form\" onSubmit={handleSubmit}>\n          <div className=\"App__form-field\">\n            <input\n              className=\"App__form-input\"\n              type=\"text\"\n              placeholder=\"Enter Title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n            {titleErrorStatus && (\n              <span className=\"App__form-error error\">\n                Please enter a title\n              </span>\n            )}\n          </div>\n\n          <div className=\"App__form-field\">\n            <FormControl fullWidth>\n              <select\n                data-cy=\"userSelect\"\n                className=\"App__form-select\"\n                value={String(selectedUserId)}\n                onChange={handleUserChange}\n              >\n                <option value={0} disabled>Choose a user</option>\n                {usersFromServer.map(({ id, name }) => (\n                  <option key={id} value={id}>{name}</option>\n                ))}\n              </select>\n            </FormControl>\n\n            {userErrorStatus && (\n              <span className=\"App__form-error error\">\n                Please choose a user\n              </span>\n            )}\n          </div>\n\n          <div className=\"App__form-button\">\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              data-cy=\"submitButton\"\n              style={{ minWidth: '200px' }}\n            >\n              Add\n            </Button>\n          </div>\n        </form>\n\n        <TodoList todos={todos} />\n      </Paper>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'Steal the \"Relic\"',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'Sell the \"Relic\" to NetWatch',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'Destroy Militech',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}